public PickerInfo FetchPicker(int pickerid)
{
    PickerInfo info = null;
    Picker pickerexists = null;
    if (pickerid < 1)
    {
        throw new ArgumentException("Picker id is invalid. Try again.");
    }
    pickerexists = _groceryListContext.Pickers.FirstOrDefault(o => o.PickerID == pickerid);
    if (pickerexists == null)
    {
        throw new ArgumentException("Picker not on file. Try again.");
    }
    info = _groceryListContext.Pickers
            .Where(x => x.PickerID == pickerid)
            .Select(x => new PickerInfo
            {
                PickerId = x.PickerID,
                PickerName = x.FirstName + " " + x.LastName

            }).FirstOrDefault();
    return info;
}

public CustomerInfo FetchCustomer(int orderid)
{
    CustomerInfo info = null;
    Order orderexists = null;
    if (orderid < 1)
    {
        throw new ArgumentException("Order id is invalid. Try again.");
    }
    orderexists = _groceryListContext.Orders.FirstOrDefault(o => o.OrderID == orderid);
    if (orderexists == null)
    {
        throw new ArgumentException("Order not on file. Try again.");
    }
    info = _groceryListContext.Orders
            .Where(x => x.OrderID == orderid)
            .Select(x => new CustomerInfo
            {
                CustomerId = x.CustomerID,
                CustomerName = x.Customer.FirstName + " " + x.Customer.LastName,
                CustomerPhone = x.Customer.Phone

            }).FirstOrDefault();
    return info;
}

public OrderListDetail FetchOrderDetails(int orderid)
{
    OrderListDetail info = null;
    Order orderexists = null;
    OrderList orderlistsexists = null;
    if (orderid < 1)
    {
        throw new ArgumentException("Order id is invalid. Try again.");
    }
    orderexists = _groceryListContext.Orders.FirstOrDefault(o => o.OrderID == orderid);
    if (orderexists == null)
    {
        throw new ArgumentException("Order not on file. Try again.");
    }
    orderlistsexists = _groceryListContext.OrderLists.FirstOrDefault(o => o.OrderID == orderid &&
                                (o.PickIssue != null || o.QtyPicked != 0));
    if (orderlistsexists != null)
    {
        throw new ArgumentException("Order has already been picked and recorded. No allowed to update.");
    }
    info = _groceryListContext.OrderLists
            .Where(x => x.OrderID == orderid)
            .Select(x => new OrderListDetail
            {
                OrderListId = x.OrderListID,
                ProductId = x.ProductID,
                Description = x.Product.Description,
                OrdQty = x.QtyOrdered,
                OrderComment = x.CustomerComment

            }).FirstOrDefault();
    return info;
}

public OrderAndDetails DisplayPlaylist(int orderid)
{
    Order orderexists = null;
    if (orderid < 1)
    {
        throw new ArgumentException("Order id is invalid. Try again.");
    }
    orderexists = _groceryListContext.Orders.FirstOrDefault(o => o.OrderID == orderid);
    if (orderexists == null)
    {
        throw new ArgumentException("Order not on file. Try again.");
    }
    OrderAndDetails info = _groceryListContext.Orders
                        .Where(p => p.OrderID == orderid)
                        .Select(p => new OrderAndDetails
                        {
                            OrderID = p.OrderID,
                            PickerID = p.PickerID,
                            PickDate = p.PickedDate,
                            Subtotal = p.SubTotal,
                            GST = p.GST,
                            Details = p.OrderLists
                                        .Select(ol => new OrderDetail
                                        {
                                            OrderListId = ol.OrderListID,
                                            ProductId = ol.ProductID,
                                            Description = ol.Product.Description,
                                            QtyOrdered = ol.QtyOrdered,
                                            QtyPicked = ol.QtyPicked,
                                            Price = ol.Price,
                                            Discount = ol.Discount,
                                            PickIssue = ol.PickIssue
                                        })
                                        .ToList()

                        }
                        ).FirstOrDefault();
    return info;

}
